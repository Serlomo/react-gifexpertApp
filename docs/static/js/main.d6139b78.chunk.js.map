{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValeu","setinputValeu","onSubmit","e","preventDefault","cats","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","Key","GifExpertApp","categories","key","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACFN,GAAe,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OAEnCL,EAAWM,OAAOC,OAAS,IAC3BT,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,2DAE6CC,UAAWH,GAFxD,sDAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCDRO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,yBAAKgB,UAAU,0CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCJHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFR,SAACA,GAAc,IAAD,EAEXd,mBAAS,CAC/BqB,KAAM,GACLe,SAAQ,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KA2BzC,OAnBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGf,UAIV,CAACtB,IAGEuB,EDvBwBM,CAAa7B,GAAhCa,EAFuB,EAE5BN,KAAae,EAFe,EAEfA,QAEpB,OACI,oCACE,4BAAKtB,GAEJsB,GAAW,sCAEV,yBAAKJ,UAAU,aAEPL,EAAOJ,KAAI,SAAAC,GAAG,OACb,kBAAC,EAAD,iBACWA,EADX,CAEOoB,IAAMpB,EAAIC,YEfxBoB,EAAe,WAAO,IAAD,EAEK7C,mBAAS,CAAC,cAFf,mBAExB8C,EAFwB,KAEZ/C,EAFY,KAI/B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ+C,EAAWvB,KAAI,SAAAT,GAAQ,OAAI,kBAAC,EAAD,CACKiC,IAAKjC,EACLA,SAAUA,U,MCX9DkC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d6139b78.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValeu, setinputValeu] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValeu(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories( cats => [inputValeu, ...cats]);\r\n\r\n        if (inputValeu.trim().length > 2 ) {\r\n            setCategories(cats => [inputValeu, ...cats]);\r\n            setinputValeu('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValeu }\r\n                onChange={ handleInputChange }\r\n                />   \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\n\r\n export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q= ${ encodeURI (category) }&api_key=Ggh4B8wr3CdtYugUkYZnnCZooQ71bXbT`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n          <h3>{category}</h3>\r\n\r\n          {loading && <p>Loading</p>}\r\n          \r\n            <div className=\"card-grid\">\r\n                 {\r\n                    images.map(img => (\r\n                     <GifGridItem \r\n                            {...img} \r\n                            Key= {img.id}/>\r\n                    ))\r\n                 }\r\n        </div> \r\n     </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n   \r\n   export const useFetchGifs = (category) => {\r\n\r\n        const [state, setState] = useState({\r\n            data: [],\r\n             loading:true\r\n\r\n    });\r\n\r\n    useEffect(() => {              \r\n         \r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n\r\n                },3000);\r\n                \r\n            })\r\n\r\n     }, [category])\r\n\r\n\r\n    return state;\r\n \r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n export const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => <GifGrid \r\n                                                    key={category}\r\n                                                    category={category} />)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}